{"version":3,"sources":["styles/Home.module.css","api/index.ts","components/Hero.tsx","components/Card.tsx","pages/Home.tsx","components/RoomImgBlock.tsx","components/Dialog.tsx","components/BookingForm.tsx","components/BookingCalendar.tsx","components/RoomInformation.tsx","pages/RoomInfo.tsx","App.tsx","reportWebVitals.ts","index.tsx","styles/RoomInfo.module.css"],"names":["module","exports","req","axios","create","baseURL","process","headers","Authorization","Accept","getRooms","a","get","res","data","getRoomInfo","id","reserveRoom","name","tel","date","post","success","message","err","response","Hero","React","memo","roomImgs","roomImgRef","useRef","useMemo","current","length","currentRoomImgIndex","imgElement","setAttribute","classList","remove","window","setInterval","className","styles","hero","ref","alt","logo","roomNameMapping","Card","imgUrl","roomName","normalPrice","holidayPrice","history","useHistory","useState","isShowInfo","setIsShowInfo","onMouseEnter","onMouseLeave","onClick","push","card","src","Home","rooms","setRooms","useEffect","then","_rooms","items","map","imageUrl","room","normalDayPrice","RoomImgBlock","imgUrls","Dialog","visiable","children","title","classNames","hidden","dialog","backslash","BookingForm","onCloseDialog","price","useParams","content","reverseDialog","setReverseDialog","phone","bookingData","setBookingData","checkInDate","setCheckInDate","checkOutDate","setCheckOutDate","normal","holiday","summaryBooking","setSummaryBooking","pareToDate","dateString","parse","Date","formatDateString","format","dates","eachDayOfInterval","start","end","d","holidayCount","filter","isSunday","isSaturday","isFriday","isHoliday","normalDayCount","normalDay","checkInputName","checkPhone","RegExp","test","checkDate","onBooking","htmlFor","type","value","onChange","e","target","placeholder","min","max","addDays","disabled","Calendar","bookings","currentDate","setCurrentDate","bookingDialogVisiable","setBookingDialogVisiable","isReserved","includes","sub","months","add","y","getYear","m","getMonth","firstDate","dateRange","lastDayOfMonth","Array","from","getDay","_","k","concat","isBefore","reserved","getDate","renderCalendarDate","library","faWind","faUtensils","faBaby","faMountain","faGlassCheers","faDog","faBell","faSmokingBan","faCouch","faTv","faWifi","faIcicles","RoomInformation","info","renderAmentity","engName","icon","size","Breakfast","Refrigerator","Sofa","Television","amenityMapping","amenities","descriptionShort","GuestMin","GuestMax","Bed","join","Footage","description","checkInAndOut","checkInEarly","checkInLate","checkOut","Object","keys","BookingCalendar","RoomInfoPage","roomInfo","setRoomInfo","_roomInfo","booking","App","path","RoomInfo","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cee1dd6d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"rooms\":\"Home_rooms__2sKwd\",\"card\":\"Home_card__2ucD6\",\"card-img\":\"Home_card-img__15FPv\",\"card-content\":\"Home_card-content__1MNY2\",\"hero\":\"Home_hero__cxkVv\",\"logo\":\"Home_logo__3etHn\"};","import axios, { AxiosError } from 'axios';\nimport { RoomsRes, RoomInfoRes } from '../lib/interfaceses';\n\nexport const req = axios.create({\n  baseURL: process.env.REACT_APP_BASE_API_URL,\n  headers: {\n    Authorization: process.env.REACT_APP_API_TOKEN,\n    Accept: 'application/json',\n  },\n});\n\nexport const getRooms = async (): Promise<RoomsRes> => {\n  const res = await req.get<RoomsRes>('/rooms');\n  return res.data;\n};\n\nexport const getRoomInfo = async (id: string): Promise<RoomInfoRes> => {\n  const res = await req.get<RoomInfoRes>(`/room/${id}`);\n  return res.data;\n};\n\nexport const reserveRoom = async (\n  id: string,\n  name: string,\n  tel: string,\n  date: string[]\n) => {\n  try {\n    await req.post<RoomInfoRes | { message: string }>(`/room/${id}`, {\n      name,\n      tel,\n      date,\n    });\n    return { success: true, message: 'success' };\n  } catch (e) {\n    const err = e as AxiosError;\n    return { success: false, message: err.response?.data.message as string };\n  }\n};\n","import React, { useRef, useMemo } from 'react';\nimport styles from '../styles/Home.module.css';\n\nconst Hero: React.FC<{ roomImgs: string[] }> = React.memo(({ roomImgs }) => {\n  const roomImgRef = useRef<HTMLImageElement>(null);\n\n  useMemo(() => {\n    if (roomImgRef.current && roomImgs.length) {\n      let currentRoomImgIndex = 0;\n      const imgElement = roomImgRef.current;\n      imgElement.setAttribute('src', roomImgs[currentRoomImgIndex]);\n      imgElement.classList.remove('hidden');\n\n      window.setInterval(() => {\n        currentRoomImgIndex =\n          currentRoomImgIndex === roomImgs.length - 1\n            ? 0\n            : (currentRoomImgIndex += 1);\n\n        imgElement.setAttribute('src', roomImgs[currentRoomImgIndex]);\n      }, 10000);\n    }\n  }, [roomImgs]);\n\n  return (\n    <div className={styles.hero}>\n      <img\n        className=\"w-full h-full object-cover object-bottom transition absolute top-0 left-0 hidden\"\n        ref={roomImgRef}\n        alt=\"room img\"\n      />\n      <div className=\"w-full h-full flex flex-col justify-center items-center\">\n        <div className={styles.logo}>\n          <h1 className=\"text-white leading-10 tracking-wider block text-3xl\">\n            White\n            <br />\n            Space\n          </h1>\n        </div>\n        <div className=\"flex flex-row items-center mt-12 text-white\">\n          <div className=\"flex pr-9\">\n            <i className=\"gg-instagram\"></i>\n            <i className=\"gg-facebook ml-3\"></i>\n          </div>\n          <div className=\"flex flex-col pl-7 border-l border-white\">\n            <div className=\"flex items-center pb-3\">\n              <i className=\"gg-phone inline-block mr-5\"></i>\n              <span>02-17264937</span>\n            </div>\n            <div className=\"flex items-center pb-3\">\n              <i className=\"gg-mail inline-block mr-5\"></i>\n              <span>whitespace@whitespace.com.tw</span>\n            </div>\n            <div className=\"flex items-center\">\n              <i className=\"gg-home-alt inline-block mr-5\"></i>\n              <span>台北市羅斯福路十段30號</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n});\n\nexport default Hero;\n","import React, { ReactElement, useState } from 'react';\nimport styles from '../styles/Home.module.css';\nimport { useHistory } from 'react-router-dom';\n\nconst roomNameMapping: { [roomName: string]: string } = {\n  'Single Room': '單人房',\n  'Deluxe Single Room': '豪華單人房',\n  'Double Room': '雙人房',\n  'Deluxe Double Room': '豪華雙人房',\n  'Twin Room': '雙床雙人房',\n  'Deluxe Twin Room': '豪華雙床雙人房',\n};\n\nconst Card: React.FC<{\n  imgUrl: string;\n  roomName: string;\n  normalPrice: number;\n  holidayPrice: number;\n  id: string;\n}> = ({ imgUrl, roomName, normalPrice, holidayPrice, id }) => {\n  const history = useHistory();\n\n  const [isShowInfo, setIsShowInfo] = useState(false);\n\n  const renderRoomInfo = (): ReactElement | null => {\n    if (!isShowInfo) return null;\n\n    return (\n      <>\n        <small className=\"text-gray-400 mt-1\">\n          {roomNameMapping[roomName]}\n        </small>\n        <div className=\"mt-6 flex justify-between items-baseline\">\n          <span className=\"font-light text-xl tracking-widest leading-8\">\n            NT.{normalPrice}\n            <span className=\"text-xs font-light\">平日</span>\n          </span>\n          <span className=\"text-xs font-light text-gray-400\">\n            NT.{holidayPrice} 假日\n          </span>\n        </div>\n      </>\n    );\n  };\n\n  return (\n    <div\n      onMouseEnter={() => setIsShowInfo(true)}\n      onMouseLeave={() => setIsShowInfo(false)}\n      onClick={() => history.push(`/room_info/${id}`)}\n      className={styles.card}\n    >\n      <div className={styles['card-img']}>\n        <img\n          className=\"w-full h-full object-cover object-center\"\n          src={imgUrl}\n        />\n      </div>\n      <div className={styles['card-content']}>\n        <h3 className=\"font-light text-sm tracking-wider\">{roomName}</h3>\n        {renderRoomInfo()}\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import React, { useEffect, useState } from 'react';\nimport { getRooms } from '../api';\nimport { RoomItem } from '../lib/interfaceses';\nimport Hero from '../components/Hero';\nimport Card from '../components/Card';\nimport styles from '../styles/Home.module.css';\n\nconst Home: React.FC = () => {\n  const [rooms, setRooms] = useState<RoomItem[]>([]);\n\n  useEffect(() => {\n    getRooms().then((_rooms) => setRooms(_rooms.items));\n  }, []);\n\n  return (\n    <div>\n      <section>\n        <Hero roomImgs={rooms.map(({ imageUrl }) => imageUrl)} />\n      </section>\n      <section className={styles.rooms}>\n        {rooms.map((room) => (\n          <Card\n            key={room.id}\n            imgUrl={room.imageUrl}\n            roomName={room.name}\n            normalPrice={room.normalDayPrice}\n            holidayPrice={room.holidayPrice}\n            id={room.id}\n          />\n        ))}\n      </section>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport styles from '../styles/RoomInfo.module.css';\nimport { useHistory } from 'react-router-dom';\n\nconst RoomImgBlock: React.FC<{ imgUrls: string[] }> = ({ imgUrls }) => {\n  const history = useHistory();\n\n  return (\n    <div className={styles['img-block']}>\n      <img\n        src={imgUrls[0]}\n        className=\"col-span-3 row-span-3 w-full h-full object-cover object-center\"\n      />\n      <img\n        src={imgUrls[1]}\n        className=\"col-span-2 row-span-1 w-full h-full object-cover object-center\"\n      />\n      <img\n        src={imgUrls[2]}\n        className=\"col-span-2 row-span-1 w-full h-full object-cover object-center\"\n      />\n      <div onClick={() => history.push('/')} className={styles.logo}>\n        <span className=\"font-medium text-lg leading-10 tracking-widest text-center\">\n          WhiteSpace\n        </span>\n      </div>\n    </div>\n  );\n};\n\nexport default RoomImgBlock;\n","import React from 'react';\nimport styles from '../styles/RoomInfo.module.css';\nimport classNames from 'classnames';\n\nconst Dialog: React.FC<{\n  visiable: boolean;\n  title: string;\n}> = ({ visiable, children, title }) => {\n  return (\n    <div\n      className={classNames(\n        'fixed top-0 left-0 w-full h-full bg-black bg-opacity-70 flex justify-center items-center',\n        {\n          hidden: !visiable,\n        }\n      )}\n    >\n      <div className={styles.dialog}>\n        <div className=\"pt-7 px-10\">\n          <h2 className=\"font-medium text-2xl tracking-wider\">{title}</h2>\n          <div className=\"flex pl-2 mt-3\">\n            <div className={styles.backslash}></div>\n            <div className={styles.backslash}></div>\n            <div className={styles.backslash}></div>\n          </div>\n        </div>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default Dialog;\n","import React, { ReactElement, useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport {\n  format,\n  parse,\n  eachDayOfInterval,\n  addDays,\n  isSunday,\n  isSaturday,\n  isFriday,\n} from 'date-fns';\nimport { reserveRoom } from '../api';\nimport { useParams, useHistory } from 'react-router-dom';\nimport Dialog from './Dialog';\n\nconst BookingForm: React.FC<{\n  onCloseDialog: () => void;\n  price: { normalDay: number; holiday: number };\n}> = ({ onCloseDialog, price }) => {\n  const { id } = useParams<{ id: string }>();\n  const history = useHistory();\n\n  const [reverseDialog, setReverseDialog] = useState<{\n    visiable: boolean;\n    content: ReactElement | null;\n    title: string;\n  }>({\n    visiable: false,\n    content: null,\n    title: '',\n  });\n\n  const [bookingData, setBookingData] = useState<{\n    name: string;\n    phone: string;\n    date: string[];\n  }>({\n    name: '',\n    phone: '',\n    date: [],\n  });\n\n  const [checkInDate, setCheckInDate] = useState('');\n  const [checkOutDate, setCheckOutDate] = useState('');\n  const [summaryBooking, setSummaryBooking] = useState({\n    normal: 0,\n    holiday: 0,\n    price: 0,\n  });\n\n  const pareToDate = (dateString: string): Date => {\n    return parse(dateString, 'yyyy-MM-dd', new Date());\n  };\n\n  const formatDateString = (date: Date): string => {\n    return format(date, 'yyyy-MM-dd');\n  };\n\n  const maxCheckInInputDate = (): string => {\n    return checkOutDate ? formatDateString(pareToDate(checkOutDate)) : '';\n  };\n\n  const minCheckOutInputDate = (): string => {\n    return checkInDate\n      ? formatDateString(addDays(pareToDate(checkInDate), 1))\n      : formatDateString(addDays(new Date(), 1));\n  };\n\n  const isHoliday = (date: Date): boolean => {\n    return isSunday(date) || isSaturday(date) || isFriday(date);\n  };\n\n  useEffect(() => {\n    if (checkInDate && checkOutDate) {\n      const dates = eachDayOfInterval({\n        start: pareToDate(checkInDate),\n        end: pareToDate(checkOutDate),\n      });\n      setBookingData({\n        ...bookingData,\n        date: dates.map((d) => formatDateString(d)),\n      });\n      const holidayCount = dates.filter((date) => isHoliday(date)).length;\n      const normalDayCount = dates.length - holidayCount;\n\n      setSummaryBooking({\n        normal: normalDayCount,\n        holiday: holidayCount,\n        price: price.holiday * holidayCount + price.normalDay * normalDayCount,\n      });\n    }\n  }, [checkInDate, checkOutDate]);\n\n  const renderReverseMessage = (): ReactElement => {\n    return (\n      <Dialog visiable={reverseDialog.visiable} title={reverseDialog.title}>\n        {reverseDialog.content}\n      </Dialog>\n    );\n  };\n\n  const checkInputName = (): boolean => {\n    return !!bookingData.name.length;\n  };\n\n  const checkPhone = (): boolean => {\n    const regex = new RegExp(/^09\\d{8}$/);\n    return regex.test(bookingData.phone);\n  };\n\n  const checkDate = (): boolean => {\n    return !!bookingData.date.length;\n  };\n\n  const onBooking = async () => {\n    const { name, phone, date } = bookingData;\n\n    const { success, message } = await reserveRoom(id, name, phone, date);\n\n    if (success) {\n      setReverseDialog({\n        visiable: true,\n        content: (\n          <div className=\"px-10 font-medium text-sm mt-6\">\n            <i className=\"gg-check-o text-3xl\"></i>\n            <div className=\"clear-right\">\n              <button\n                onClick={() => history.push('/')}\n                className=\"bg-gray-700 mt-8 py-2 px-8 float-right mb-9 text-white focus:outline-none\"\n              >\n                回首頁\n              </button>\n            </div>\n          </div>\n        ),\n        title: '訂房成功',\n      });\n    } else {\n      setReverseDialog({\n        visiable: true,\n        content: (\n          <div className=\"px-10 font-medium text-sm mt-6\">\n            <p>{message}</p>\n            <div className=\"clear-right\">\n              <button\n                onClick={() =>\n                  setReverseDialog({ ...reverseDialog, visiable: false })\n                }\n                className=\"bg-gray-700 mt-8 py-2 px-8 float-right mb-9 text-white focus:outline-none\"\n              >\n                返回\n              </button>\n            </div>\n          </div>\n        ),\n        title: '訂房失敗',\n      });\n    }\n  };\n\n  return (\n    <>\n      <form className=\"flex flex-col px-10 mt-8\">\n        {/* name */}\n        <div className=\"flex items-center mb-4 justify-between\">\n          <label className=\"font-medium text-sm\" htmlFor=\"name\">\n            姓名\n          </label>\n          <input\n            className={classNames(\n              'border rounded p-1 focus:outline-none text-sm',\n              {\n                'border-gray-400': checkInputName(),\n                'border-red-500': !checkInputName(),\n              }\n            )}\n            type=\"text\"\n            id=\"name\"\n            value={bookingData.name}\n            onChange={(e) =>\n              setBookingData({ ...bookingData, name: e.target.value })\n            }\n          />\n        </div>\n        {/* phone */}\n        <div className=\"flex items-center justify-between mb-4\">\n          <label className=\"font-medium text-sm\" htmlFor=\"phone\">\n            手機\n          </label>\n          <input\n            className={classNames(\n              'border rounded p-1 focus:outline-none text-sm',\n              {\n                'border-gray-400': checkPhone(),\n                'border-red-500': !checkPhone(),\n              }\n            )}\n            type=\"text\"\n            id=\"phone\"\n            value={bookingData.phone}\n            onChange={(e) =>\n              setBookingData({ ...bookingData, phone: e.target.value })\n            }\n          />\n        </div>\n        {/* date picker */}\n        <div className=\"flex items-center justify-between\">\n          <label\n            className=\"font-medium text-sm mr-auto whitespace-nowrap\"\n            htmlFor=\"booking\"\n          >\n            預約起迄\n          </label>\n\n          <input\n            type=\"date\"\n            placeholder=\"入住日\"\n            id=\"booking\"\n            className={classNames('rounded p-1 text-sm', {\n              'border-gray-400': checkDate(),\n              'border-red-500': !checkDate(),\n            })}\n            min={format(new Date(), 'yyyy-MM-dd')}\n            onChange={(e) => setCheckInDate(e.target.value)}\n            value={checkInDate}\n            max={maxCheckInInputDate()}\n          />\n          <span className=\"mx-2\">~</span>\n          <input\n            type=\"date\"\n            placeholder=\"退房日\"\n            className={classNames('rounded p-1 text-sm', {\n              'border-gray-400': checkDate(),\n              'border-red-500': !checkDate(),\n            })}\n            onChange={(e) => setCheckOutDate(e.target.value)}\n            min={minCheckOutInputDate()}\n            value={checkOutDate}\n          />\n        </div>\n      </form>\n      {/* summary day */}\n      <div className=\"bg-gray-300 mt-8 py-4 px-10 flex-col text-xs font-medium text-gray-600\">\n        <div className=\"flex justify-between\">\n          <span>平日時段</span>\n          <span>{summaryBooking.normal}夜</span>\n        </div>\n        <div className=\"flex justify-between\">\n          <span>假日時段</span>\n          <span>{summaryBooking.holiday}夜</span>\n        </div>\n      </div>\n      {/* price */}\n      <div className=\"mt-2 w-full px-10\">\n        <p className=\"font-medium text-3xl text-red-400 text-right\">\n          <span className=\"mr-8\">=</span>\n          NT.{summaryBooking.price}\n        </p>\n      </div>\n      {/* btns */}\n      <div className=\"mt-7 px-10 mb-8 flex justify-between\">\n        <button\n          onClick={() => onCloseDialog()}\n          className=\"bg-gray-300 text-gray-600 font-medium text-sm tracking-wider py-2 px-8 focus:outline-none\"\n        >\n          取消\n        </button>\n        <button\n          onClick={() => onBooking()}\n          className={classNames(\n            'bg-gray-600 text-white font-medium text-sm tracking-wider py-2 px-8 focus:outline-none',\n            {\n              'cursor-not-allowed': !(\n                checkDate() &&\n                checkInputName() &&\n                checkPhone()\n              ),\n            }\n          )}\n          disabled={!(checkDate() && checkInputName() && checkPhone())}\n        >\n          確定預約\n        </button>\n      </div>\n      {renderReverseMessage()}\n    </>\n  );\n};\n\nexport default BookingForm;\n","import React, { ReactElement, useState } from 'react';\nimport BookingForm from './BookingForm';\nimport Dialog from './Dialog';\nimport { Booking } from '../lib/interfaceses';\nimport {\n  getMonth,\n  getYear,\n  isBefore,\n  add,\n  sub,\n  format,\n  getDay,\n  lastDayOfMonth,\n  eachDayOfInterval,\n  getDate,\n} from 'date-fns';\nimport classNames from 'classnames';\nimport styles from '../styles/RoomInfo.module.css';\n\nconst Calendar: React.FC<{\n  bookings: Booking[];\n  price: { holiday: number; normalDay: number };\n}> = ({ bookings, price }) => {\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const [bookingDialogVisiable, setBookingDialogVisiable] = useState(false);\n\n  const renderCalendarDate = (): ReactElement[] => {\n    const y = getYear(currentDate);\n    const m = getMonth(currentDate);\n    const firstDate = new Date(y, m, 1);\n\n    const dateRange = eachDayOfInterval({\n      start: firstDate,\n      end: lastDayOfMonth(new Date(y, m, 1)),\n    });\n\n    return Array.from({ length: getDay(firstDate) }, (_, k) => (\n      <div key={k}></div>\n    )).concat(\n      dateRange.map((d) => (\n        <div\n          className={classNames('font-light text-sm text-center', {\n            'text-gray-300': isBefore(d, new Date()),\n            [styles.reserved]: isReserved(d) && !isBefore(d, new Date()),\n          })}\n          key={format(d, 'yyyymmdd')}\n        >\n          {getDate(d)}\n        </div>\n      ))\n    );\n  };\n\n  const isReserved = (date: Date): boolean => {\n    return bookings\n      .map(({ date }) => date)\n      .includes(format(date, 'yyyy-MM-dd'));\n  };\n\n  const onCloseDialog = (): void => {\n    setBookingDialogVisiable(false);\n  };\n\n  return (\n    <div className=\"ml-8\">\n      <div className=\"bg-gray-200 flex justify-around pt-7\">\n        <button\n          className=\"focus:outline-none\"\n          onClick={() => setCurrentDate(sub(currentDate, { months: 1 }))}\n        >\n          <i className=\"gg-chevron-left\" />\n        </button>\n        <div className=\"col-span-5 text-center font-middle text-lg tracking-wider\">\n          {format(currentDate, 'yyyy/MM')}\n        </div>\n        <button\n          className=\"focus:outline-none\"\n          onClick={() => setCurrentDate(add(currentDate, { months: 1 }))}\n        >\n          <i className=\"gg-chevron-right\" />\n        </button>\n      </div>\n      <div className=\"bg-gray-200 grid grid-cols-7 gap-8 p-7\">\n        <div className=\"font-light text-lg text-gray-600\">日</div>\n        <div className=\"font-light text-lg text-gray-600\">一</div>\n        <div className=\"font-light text-lg text-gray-600\">二</div>\n        <div className=\"font-light text-lg text-gray-600\">三</div>\n        <div className=\"font-light text-lg text-gray-600\">四</div>\n        <div className=\"font-light text-lg text-gray-600\">五</div>\n        <div className=\"font-light text-lg text-gray-600\">六</div>\n        {renderCalendarDate()}\n      </div>\n      <button\n        onClick={() => setBookingDialogVisiable(true)}\n        className={styles['booking-btn']}\n      >\n        預約時段\n      </button>\n      <Dialog visiable={bookingDialogVisiable} title=\"預約時段\">\n        <BookingForm onCloseDialog={onCloseDialog} price={price} />\n      </Dialog>\n    </div>\n  );\n};\n\nexport default Calendar;\n","import React, { ReactElement } from 'react';\nimport { Amenities, Room, Booking } from '../lib/interfaceses';\nimport BookingCalendar from './BookingCalendar';\nimport styles from '../styles/RoomInfo.module.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faWind,\n  faUtensils,\n  faBaby,\n  faMountain,\n  faGlassCheers,\n  faDog,\n  faBell,\n  faSmokingBan,\n  faCouch,\n  faTv,\n  faWifi,\n  faIcicles,\n} from '@fortawesome/free-solid-svg-icons';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport classNames from 'classnames';\n\nlibrary.add(\n  faWind,\n  faUtensils,\n  faBaby,\n  faMountain,\n  faGlassCheers,\n  faDog,\n  faBell,\n  faSmokingBan,\n  faCouch,\n  faTv,\n  faWifi,\n  faIcicles\n);\n\nconst RoomInformation: React.FC<{ info: Room; bookings: Booking[] }> = ({\n  info,\n  bookings,\n}) => {\n  const amenityMapping = (\n    engName: string\n  ): { icon: ReactElement; name: string } => {\n    const amenities: { [key: string]: { icon: ReactElement; name: string } } = {\n      'Air-Conditioner': {\n        icon: <FontAwesomeIcon size=\"lg\" icon=\"wind\" />,\n        name: '空調',\n      },\n      Breakfast: {\n        icon: <FontAwesomeIcon size=\"lg\" icon=\"utensils\" />,\n        name: '早餐',\n      },\n      'Child-Friendly': {\n        icon: <FontAwesomeIcon size=\"lg\" icon=\"baby\" />,\n        name: '適合兒童',\n      },\n      'Great-View': {\n        icon: <FontAwesomeIcon size=\"lg\" icon=\"mountain\" />,\n        name: '漂亮的視野',\n      },\n      'Mini-Bar': {\n        icon: <FontAwesomeIcon size=\"lg\" icon=\"glass-cheers\" />,\n        name: 'Mini Bar',\n      },\n      'Pet-Friendly': {\n        icon: <FontAwesomeIcon size=\"lg\" icon=\"dog\" />,\n        name: '寵物攜帶',\n      },\n      Refrigerator: {\n        icon: <FontAwesomeIcon size=\"lg\" icon=\"icicles\" />,\n        name: '冰箱',\n      },\n      'Room-Service': {\n        icon: <FontAwesomeIcon size=\"lg\" icon=\"bell\" />,\n        name: 'Room Service',\n      },\n      'Smoke-Free': {\n        icon: <FontAwesomeIcon size=\"lg\" icon=\"smoking-ban\" />,\n        name: '禁止吸煙',\n      },\n      Sofa: {\n        icon: <FontAwesomeIcon size=\"lg\" icon=\"couch\" />,\n        name: '沙發',\n      },\n      Television: {\n        icon: <FontAwesomeIcon size=\"lg\" icon=\"tv\" />,\n        name: '電視',\n      },\n      'Wi-Fi': {\n        icon: <FontAwesomeIcon size=\"lg\" icon=\"wifi\" />,\n        name: 'Wi-Fi',\n      },\n    };\n\n    return amenities[engName];\n  };\n\n  const renderAmentity = (engName: keyof Amenities): ReactElement => {\n    const { icon, name } = amenityMapping(engName);\n\n    return (\n      <span\n        key={engName}\n        className={classNames('flex items-center mb-6', {\n          'text-gray-300': info.amenities[engName],\n        })}\n      >\n        <span className=\"mr-5\">{icon}</span>\n        <span className=\"text-xs font-light\">{name}</span>\n      </span>\n    );\n  };\n\n  return (\n    <div className=\"grid grid-cols-3\">\n      <div className=\"col-span-2 flex\">\n        <div className=\"flex-col mr-auto\">\n          {/* room name */}\n          <div>\n            <h2 className=\"text-4xl font-medium tracking-wide mr-auto\">\n              {info.name}\n            </h2>\n          </div>\n          {/* room content */}\n          <div className=\"mt-8 flex\">\n            <dl className=\"mr-auto font-light\">\n              <span className=\"flex mb-2\">\n                <dt>房客人數限制：</dt>\n                <dd>\n                  {info.descriptionShort.GuestMin}~\n                  {info.descriptionShort.GuestMax}人\n                </dd>\n              </span>\n              <span className=\"flex mb-2\">\n                <dt>床型：</dt>\n                <dd> {info.descriptionShort.Bed.join(',')}</dd>\n              </span>\n              <span className=\"flex mb-2\">\n                <dt>衛浴數量：</dt>\n                <dd>{info.descriptionShort['Private-Bath']} 間</dd>\n              </span>\n              <span className=\"flex\">\n                <dt>房間大小：</dt>\n                <dd>{info.descriptionShort.Footage} 平方公尺</dd>\n              </span>\n            </dl>\n          </div>\n          {/* room description */}\n          <div className=\"mt-4 max-w-lg\">\n            <p className=\"text-xs font-light leading-5 tracking-wide\">\n              {info.description}\n            </p>\n          </div>\n          {/* 分隔 */}\n          <div className=\"flex mt-4 mb-7\">\n            <span className={styles.backslash}></span>\n            <span className={styles.backslash}></span>\n            <span className={styles.backslash}></span>\n          </div>\n          {/* check in & out time */}\n          <div className=\"flex justify-between max-w-sm\">\n            <span className=\"flex flex-col\">\n              <p className=\"font-light text-sm tracking-wide\">Check In</p>\n              <p className=\"text-xl tracking-wider font-light\">\n                {info.checkInAndOut.checkInEarly} －\n                {info.checkInAndOut.checkInLate}\n              </p>\n            </span>\n            <span className=\"flex flex-col\">\n              <p className=\"font-light text-sm tracking-wide\">Check Out</p>\n              <p className=\"text-xl tracking-wider font-light\">\n                {info.checkInAndOut.checkOut}\n              </p>\n            </span>\n          </div>\n          {/* amenities */}\n          <div className=\"pt-8 mt-10 px-5 grid grid-cols-3 grid-rows-4 bg-gray-200\">\n            {Object.keys(info.amenities).map((engName) =>\n              renderAmentity(engName as keyof Amenities)\n            )}\n          </div>\n        </div>\n        {/* room price */}\n        <div>\n          <p className=\"text-3xl font-light leading-7 tracking-wide text-right\">\n            NT.{info.normalDayPrice}\n          </p>\n          <p className=\"text-base font-light text-gray-400 text-right\">\n            平日(一~四)\n          </p>\n          <p className=\"text-base font-light leading-7 tracking-wide text-right mt-3\">\n            NT.{info.holidayPrice}\n          </p>\n          <p className=\"text-sm font-light text-gray-400 text-right\">\n            假日(五~日)\n          </p>\n        </div>\n      </div>\n      <BookingCalendar\n        price={{ holiday: info.holidayPrice, normalDay: info.normalDayPrice }}\n        bookings={bookings}\n      />\n    </div>\n  );\n};\n\nexport default RoomInformation;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getRoomInfo } from '../api';\nimport RoomImgBlock from '../components/RoomImgBlock';\nimport RoomInformation from '../components/RoomInformation';\nimport { RoomInfo } from '../lib/interfaceses';\n\nconst RoomInfoPage: React.FC = () => {\n  const { id } = useParams<{ id: string }>();\n\n  const [roomInfo, setRoomInfo] = useState<RoomInfo | null>(null);\n\n  useEffect(() => {\n    getRoomInfo(id).then((_roomInfo) => {\n      setRoomInfo(_roomInfo);\n    });\n  }, [id]);\n\n  if (!roomInfo) return null;\n\n  return (\n    <div>\n      <section>\n        <RoomImgBlock imgUrls={roomInfo.room[0].imageUrl} />\n      </section>\n      <section className=\"mt-12 px-16 pb-16 container mx-auto\">\n        <RoomInformation info={roomInfo.room[0]} bookings={roomInfo.booking} />\n      </section>\n    </div>\n  );\n};\n\nexport default RoomInfoPage;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Home from './pages/Home';\nimport RoomInfo from './pages/RoomInfo';\n\nconst App: React.FC = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/room_info/:id\">\n          <RoomInfo />\n        </Route>\n        <Route path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img-block\":\"RoomInfo_img-block__3OZ4x\",\"logo\":\"RoomInfo_logo__3-QiF\",\"backslash\":\"RoomInfo_backslash__270MF\",\"reserved\":\"RoomInfo_reserved__1UwGv\",\"booking-btn\":\"RoomInfo_booking-btn__2hmbQ\",\"dialog\":\"RoomInfo_dialog__3oE3m\"};"],"sourceRoot":""}